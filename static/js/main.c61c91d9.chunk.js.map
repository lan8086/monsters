{"version":3,"sources":["Components/Card/card.component.js","Components/CardList/card-list.component.js","Components/SearchBox/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","monster","name","alt","src","id","email","CardList","monsters","map","Search","placeholder","onchangehandler","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMoster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACJ,6BAAKD,EAAME,QAAQC,OACnB,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BL,EAAME,QAAQI,GAAxC,4BACtB,6BAAKN,EAAME,QAAQC,OACnB,4BAAIH,EAAME,QAAQK,aCLLC,G,MAAW,SAACR,GACrB,OAAS,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAR,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCHjBK,G,MAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,gBAAf,OAClB,uBACAZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCCG,E,kDArCb,aAAe,IAAD,8BACZ,gBAOFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAPrC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJL,E,gEAYO,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,+BAGlC,IAAD,EAC0BC,KAAKN,MAA9Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAiBrB,EAASsB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQC,KAAK6B,cAAcC,SAASb,EAAYY,kBAEhD,OACE,sBAAK/B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAQa,KAAK,SACbF,YAAY,gBACZC,gBAAiBgB,KAAKZ,eACvB,cAAC,EAAD,CAAUR,SAAUqB,W,GA9BTI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c61c91d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n<h1>{props.monster.name}</h1>\r\n<img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n<h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport {Card} from '../Card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = (props) => {\r\n    return ( <div className=\"card-list\">\r\n         { props.monsters.map(monster => (\r\n           <Card key={monster.id} monster={monster}></Card>\r\n         ))}\r\n        \r\n        </div>)\r\n}","import React from 'react';\r\n\r\nimport \"./search-box.style.css\";\r\n\r\nexport const Search = ({placeholder, onchangehandler}) => (\r\n    <input \r\n    className = \"search\"\r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={onchangehandler } />\r\n)\r\n","\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './Components/CardList/card-list.component';\nimport {Search} from './Components/SearchBox/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n        monsters: [],\n        searchField: \"\"\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  componentDidMount() {\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n  }\n  \n  render() {\n    const { monsters, searchField} = this.state;\n    const filteredMoster = monsters.filter(monster => \n    monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolobox</h1>\n        <Search type=\"search\" \n        placeholder=\"search here 1\" \n        onchangehandler={this.handleChange } />\n       <CardList monsters={filteredMoster}> \n        </CardList>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}